--=============================================================--
--=======================TABLES MANAGEMENT=====================--
--=============================================================--
--USERS
CREATE TABLE users (
	id			int			 PRIMARY KEY IDENTITY(1,1),
    login		NVARCHAR(32) NOT NULL UNIQUE,
	password	NVARCHAR(32) NOT NULL,
	disp_name	NVARCHAR(32) NOT NULL,
	insert_time DATETIME2 NOT NULL DEFAULT GETDATE(),
	update_time DATETIME2 NOT NULL DEFAULT GETDATE(),
)
CREATE TRIGGER trg_UpdateUser
ON dbo.users
AFTER UPDATE
AS 
    UPDATE dbo.users
    SET update_time = GETDATE()
    WHERE id IN (SELECT DISTINCT id FROM Inserted)
--CATEGORIES
CREATE TABLE categories(
	id			int				PRIMARY KEY IDENTITY(1,1),
	name		NVARCHAR(32)	NOT NULL UNIQUE,
	description TEXT,
	insert_time DATETIME2 NOT NULL DEFAULT GETDATE(),
	update_time DATETIME2 NOT NULL DEFAULT GETDATE(),
)
CREATE TRIGGER trg_UpdateCategory
ON dbo.categories
AFTER UPDATE
AS
    UPDATE dbo.categories
    SET update_time = GETDATE()
    WHERE id IN (SELECT DISTINCT id FROM Inserted)

--PRODUCTS
CREATE TABLE products (
	id			INT			 PRIMARY KEY IDENTITY(1,1),
	name		NVARCHAR(32) NOT NULL UNIQUE,
	category_id	INT			 NOT NULL FOREIGN KEY REFERENCES categories(id),
	insert_time DATETIME2	 NOT NULL DEFAULT GETDATE(),
	update_time DATETIME2	 NOT NULL DEFAULT GETDATE(),
)
CREATE TRIGGER trg_UpdateProduct
ON dbo.products
AFTER UPDATE
AS
    UPDATE dbo.products
    SET update_time = GETDATE()
    WHERE id IN (SELECT DISTINCT id FROM Inserted)
--ORDERS_LOG
CREATE TABLE orders_log(
	id			INT PRIMARY KEY IDENTITY(1,1),
	user_id		INT NOT NULL FOREIGN KEY REFERENCES users(id),
	product_id	INT NOT NULL FOREIGN KEY REFERENCES products(id),
	insert_time DATETIME2 NOT NULL DEFAULT GETDATE(),
	update_time DATETIME2 NOT NULL DEFAULT GETDATE(),
)
CREATE TRIGGER trg_UpdateOrder
ON dbo.orders_log
AFTER UPDATE
AS
    UPDATE dbo.orders_log
    SET update_time = GETDATE()
    WHERE id IN (SELECT DISTINCT id FROM Inserted)
--COMMENTS
CREATE TABLE comments(
	id			INT		  PRIMARY KEY IDENTITY(1,1),
	order_id	INT		  NOT NULL FOREIGN KEY REFERENCES orders_log(id),
	text		TEXT      NOT NULL,
	insert_time DATETIME2 NOT NULL DEFAULT GETDATE(),
	update_time DATETIME2 NOT NULL DEFAULT GETDATE(),
)
CREATE TRIGGER trg_UpdateComment
ON dbo.comments
AFTER UPDATE
AS
    UPDATE dbo.comments
    SET update_time = GETDATE()
    WHERE id IN (SELECT DISTINCT id FROM Inserted)



--=======DROP TABLES
--DROP TABLE users
--DROP TABLE products
--DROP TABLE categories
--DROP TABLE orders_log
--DROP TABLE comments

--=============================================================--
--=======================SAMPLE DATA===========================--
--=============================================================--
SET IDENTITY_INSERT users ON;
INSERT INTO users (id, login, password, disp_name) VALUES (1, 'mark2002007', '1111', 'MarKson');
INSERT INTO users (id, login, password, disp_name) VALUES (2, 'gerik123', '123', 'German');
SET IDENTITY_INSERT users OFF;
SET IDENTITY_INSERT categories ON;
INSERT INTO categories (id, name) VALUES (1,'Food'), (2,'Tech'), (3,'Clothes');
SET IDENTITY_INSERT categories OFF;
SET IDENTITY_INSERT products ON;
INSERT INTO products (id, name, category_id) VALUES (1, 'Burger', 1), (2, 'Hotdog', 1), (3, 'Pizza', 1);
INSERT INTO products (id, name, category_id) VALUES (4,'Laptop', 2), (5, 'Phone', 2), (6, 'Headphones', 2);
INSERT INTO products (id, name, category_id) VALUES (7, 'Hat', 3), (8, 'Shirt', 3), (9, 'Trousers', 3);
SET IDENTITY_INSERT products OFF;
SET IDENTITY_INSERT orders_log ON;
INSERT INTO orders_log (id, user_id, product_id) VALUES (1, 1, 1), (2, 1, 4), (3, 1, 7);
INSERT INTO orders_log (id, user_id, product_id) VALUES (4, 2, 2), (5, 2, 5), (6, 2, 8);
SET IDENTITY_INSERT orders_log OFF;
SET IDENTITY_INSERT comments ON;
INSERT INTO comments (id, order_id, text) VALUES (1, 1, 'Nice Burger!'), (2, 2, 'Cool Laptop!');
INSERT INTO comments (id, order_id, text) VALUES (3, 4, 'Nice Hotdog!'), (4, 5, 'Cool Phone!');
SET IDENTITY_INSERT comments OFF;


--DELETE FROM comments
--DELETE FROM orders_log
--DELETE FROM products 
--DELETE FROM categories 
--DELETE FROM users


SELECT * FROM users
SELECT * FROM categories 
SELECT * FROM products 
SELECT * FROM orders_log
SELECT * FROM comments






--==============================================================--







